{"version":3,"sources":["components/Footer.js","components/Hero.js","components/TabEx.js","components/Experience.js","components/AboutMe.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","intro","title","title2","subTitle","text","text2","TabEx","span","offset","skills","tabs","tabPanels","tabLists","skill_counter","forEach","skill","idName","toString","push","tabFor","Category","panel","Title","href","Link","Location","Time","line","Content","c","tabId","defaultTab","vertical","createTabs","tabEx","Experience","experience","AboutMe","about","HomePage","Jumbotron","id","home","project","contact","App","handleScroll","lastScrollY","state","currentScrollY","window","scrollY","setState","slide","bind","hidden","headerLinks","path","addEventListener","this","removeEventListener","Navbar","fixed","style","transform","transition","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","activeClass","to","spy","smooth","duration","exact","render","React","Component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9363c5bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Footer() {\r\n\r\n    return(\r\n        <footer className=\"mt-5\">\r\n            <Container fluid={true}>\r\n                <Row className=\"border-top justify-content-between p-3\">\r\n                    <Col className=\"p-0\" md={3} sm={12}>\r\n                        Haoyan Jiang\r\n                    </Col>\r\n                    <Col className=\"p-0 d-flex justify-content-end\" md={3}>\r\n                        This site was made by Haoyan Jiang 11/15/2019.\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Hero(props) {\r\n\r\n    return(\r\n        // <Jumbotron className=\"jumbotron-fluid p-0 hero-jumbo\">\r\n        //     <Container fluid={true}>\r\n                <Row className=\"justify-content-center py-5\">\r\n                    <Col md={8} sm={6}>\r\n                        { props.intro && <h3 className=\"display-5 font-weight-bolder hero-intro\">{props.intro}</h3> }\r\n                        { props.title && <h1 className=\"display-1 font-weight-bolder hero-title\">{props.title}</h1> }\r\n                        { props.title2 && <h1 className=\"display-4 font-weight-bolder hero-title2\">{props.title2}</h1> }\r\n                        { props.subTitle && <h3 className=\"display-5 font-weight-bolder hero-subTitle\">{props.subTitle}</h3> }\r\n                        { props.text && <h3 className=\"lead font-weight-normal hero-text\">{props.text}</h3> }\r\n                        { props.text2 && <h3 className=\"lead font-weight-normal hero-text\">{props.text2}</h3> }\r\n                    </Col>\r\n                </Row>\r\n        //     </Container>\r\n        // </Jumbotron>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Hero;","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n// import Hero from './Hero';\r\n// import Fade from 'react-reveal/Fade';\r\n// import {Tab, Nav, Tabs, TabPanel, Tabs, TabList} from 'react-bootstrap'\r\nimport { Tab, TabPanel, Tabs, TabList } from \"react-web-tabs\";\r\nimport \"react-web-tabs/dist/react-web-tabs.css\";\r\n\r\nfunction TabEx(props){\r\n    let createTabs = (skills) =>{\r\n        let tabs = []\r\n        let tabPanels=[]\r\n        let tabLists=[]\r\n        let skill_counter = 0\r\n        skills.forEach(function(skill){\r\n            skill_counter+=1\r\n            let idName = 'nav '+skill_counter.toString()\r\n            tabLists.push(<Tab className=\"tab\" tabFor={idName}>{skill.Category}</Tab>)\r\n            let panel=[]\r\n            panel.push(<div><h3 className=\"display-5 font-weight-bolder Ex title\">{skill.Title}</h3></div>)\r\n            panel.push(<div><a href = {skill.Link} className=\"lead font-weight-normal Ex location\">{skill.Location}</a></div>)\r\n            panel.push(<div><h3 className=\"lead font-weight-normal Ex time\">{skill.Time}</h3></div>)\r\n            let line = []\r\n            skill.Content.forEach(function(c){\r\n                line.push(<li className=\"Ex content\">{c}</li>)\r\n            })\r\n            panel.push(<ul>{line}</ul>)\r\n            tabPanels.push(<TabPanel tabId={idName} className = \"TabPanel\">{panel}</TabPanel>)\r\n        })\r\n        tabs.push(<Tabs defaultTab=\"nav 1\" vertical className=\"vertical-tabs\"><TabList>{tabLists}</TabList>{tabPanels}</Tabs>)\r\n        \r\n    return (\r\n        tabs\r\n    )\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='justify-content-center skills'>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={{ span: 7, offset: 0 }}>\r\n                    {createTabs(props.tabEx.skills)}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default TabEx;","import React from 'react';\r\nimport TabEx from './TabEx'\r\n\r\nfunction Experience(props){\r\n    return(\r\n        <TabEx tabEx = {props.experience}/>\r\n    );\r\n}\r\n\r\nexport default Experience;","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Hero from './Hero';\r\n// import {Tab, Nav, ListGroup} from 'react-bootstrap'\r\n// import Card from './Card';\r\n\r\n\r\n\r\n\r\nfunction AboutMe(props) {\r\n    return(\r\n            <Row className=\"justify-content-center py-0\">\r\n                <Col md={{ span: 6, offset: 1 }} className = \"justify-content\">\r\n                    <Hero subTitle={props.about.title} text2={props.about.text2} text={props.about.text}/>  \r\n                </Col>\r\n                <Col>\r\n                    \r\n                </Col>\r\n                {/* <div className='justify-content-center skills'>\r\n                        {createTabs(props.about.skills)}\r\n                    </div> */}\r\n            </Row>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport Hero from '../components/Hero';\r\nimport Experience from '../components/Experience';\r\n// import Carousel from '../components/Carousel';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport AboutMe from \"../components/AboutMe\";\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nfunction HomePage(props) {\r\n    return(\r\n        <Fade>\r\n            <div>\r\n                <Jumbotron className=\"jumbotron-fluid p-0 m-0 homePage-jumbo\" id=\"Intro\">\r\n                    <Container fluid={true} className=\"intro-contain\">\r\n                        <Hero title={props.home.title} title2={props.home.title2} subTitle={props.home.subTitle} text={props.home.text} intro={props.home.intro} text2={props.home.text2}/>\r\n                        <Row className=\"justify-content-center\">\r\n                            <Col md={8} sm={12}>\r\n                            <button className=\"button button-home\">\r\n                                Get In Touch\r\n                            </button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n            <div>   \r\n                <Jumbotron className=\"jumbotron-fluid p-0 m-0 homePage-jumbo\" id=\"AboutMe\">\r\n                    <Container fluid={true} className=\"intro-contain\">\r\n                        {/* <Hero subTitle={props.home.about.title} text={props.home.about.text} text2={props.home.about.text2}/> */}\r\n                        <AboutMe about = {props.home.about}/>   \r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n            <div>  \r\n                <Jumbotron className=\"jumbotron-fluid p-0 m-0 homePage-jumbo\" id=\"Experience\">\r\n                    <Container fluid={true} className=\"intro-contain\">\r\n                        <Hero subTitle={props.home.experience.title}/>\r\n                        <Experience experience={props.home.experience}/>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n            <div>\r\n                <Jumbotron className=\"jumbotron-fluid p-0 m-0 homePage-jumbo\" id=\"Project\">\r\n                    <Container fluid={true} className=\"intro-contain\">\r\n                        <Hero subTitle={props.home.project.title}/>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n            <div>\r\n                <Jumbotron className=\"jumbotron-fluid p-0 m-0 homePage-jumbo\" id=\"ContactMe\">\r\n                    <Container fluid={true} className=\"intro-contain\">\r\n                        <Hero subTitle={props.home.contact.title}/>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </div>\r\n        </Fade>\r\n    );\r\n\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './App.css';\nimport { Link} from \"react-scroll\";\n\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\n// import AboutPage from './pages/AboutPage';\n// import ContactPage from './pages/ContactPage';\n// import Fade from 'react-reveal/Fade';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.state = {\n      slide: 0,  // How much should the Navbar slide up or down\n      lastScrollY: 0,  // Keep track of current position in state\n      hidden: false,\n      title: 'Max Jiang',\n      headerLinks: [\n        { title: 'Home', path: '/' },\n        { title: 'About', path: '/about' },\n        { title: 'Contact', path: '/contact' }\n      ],\n      home: {\n        title: 'Max Jiang',\n        text: 'Fourth-year undergraduate, major in computer science & statistics in the University of Toronto. Specializing in Machine Learning & Software Engineering & Web-Development',\n        title2: 'Work Hard & Be Nice to People',\n        intro: \"My name is:\",\n        text2: 'Toronto, ON, Canada',\n        about:{\n          title: '1. About Me ---------',\n          text: 'Hello! I am Haoyan (Max) Jiang, a fourth year undergraduate major in computer science & statistics in the University of Toronto. I develope websites with modern frameworks such as React.js and Spring; digging into data mining and machine learning with rigorous statistic models and tools such as Python, Numpy, R, Scikilearn and pandas.'\n          // text2: 'Some technologies I am using: '\n        },\n        experience:{\n          title: '2. Experience ---------',\n          skills: \n            [\n              {\n                Category:'UofT IML Lab',\n                Title: 'Software Developer & 3D Modeling',\n                Location: '@University of Toronto Interactive Media Lab',\n                Time: '04/2019 – 09/2019',\n                Link: \"https://imedia.mie.utoronto.ca/\",\n                Content:\n                ['Driving Simulation Game for Elder People; Engine building, game logic and modeling of real-time driving experiences on web-serving applications using Babylon.js',\n                'Building and importing 3D models for famous scenic views in the world using Blender',\n                'Data collection and analysis with MongoDB, using learning algorism to analyze player’s brain functionality',\n                'Working with elder people in medical institutes to improve game design and game play experiences']\n              },\n              {\n                Category:'UofT IML Lab',\n                Title: 'Junior Full Stack Developer',\n                Location: '@University of Toronto Interactive Media Lab',\n                Time: '04/2019 – 09/2019',\n                Link: \"https://imedia.mie.utoronto.ca/\",\n                Content:['Managing back-end performance, administration and data collections using MongoDB',\n                'Responsive web design, exposure to React.js implementation, Node.js',\n                'Interactive dashboard design and data representation for future researches']\n              }\n            ]\n        },\n        project:{\n          title: '3. Project ---------'\n        },\n        contact:{\n          title: '4. Contact Me ----------'\n        }\n      },\n      about: {\n        title: 'About Me'\n      },\n      contact: {\n        title: 'Let\\'s Talk'\n      }\n    }\n  }\n\n  componentWillMount() {\n    // When this component mounts, begin listening for scroll changes\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    // If this component is unmounted, stop listening\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    const { lastScrollY } = this.state; \n    const currentScrollY = window.scrollY;\n\n\n    if (currentScrollY > lastScrollY) {\n      this.setState({ slide: '-60px' });\n    } else {\n      this.setState({ slide: '0px' });\n    }\n    this.setState({ lastScrollY: currentScrollY });\n  };\n\n\n  render() {\n    return (\n      <Router>\n        <Container className=\"p-0\" fluid={true}>\n          <Navbar fixed='top' style={{\n          transform: `translate(0, ${this.state.slide})`,\n          transition: 'transform 90ms linear',\n        }}\n          className=\"border-bottom\" bg=\"white\" expand=\"lg\" hidden={this.state.hidden}>\n            <Navbar.Brand>HJ</Navbar.Brand>\n\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar-toggle\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link scroll\" activeClass=\"active\" to=\"Intro\" spy={true} smooth={true} offset={-70} duration= {500}>Home</Link>\n                <Link className=\"nav-link scroll\" activeClass=\"active\" to=\"AboutMe\" spy={true} smooth={true} offset={-70} duration= {500}>1. About Me</Link>\n                <Link className=\"nav-link scroll\" activeClass=\"active\" to=\"Experience\" spy={true} smooth={true} offset={-70} duration= {500}>2. Experience</Link>\n                <Link className=\"nav-link scroll\" activeClass=\"active\" to=\"Project\" spy={true} smooth={true} offset={-70} duration= {500}>3. Project</Link>\n                <Link className=\"nav-link scroll\" activeClass=\"active\" to=\"ContactMe\" spy={true} smooth={true} offset={-70} duration= {500}>4. Contact Me</Link>\n                {/* <Link className=\"nav-link\" to=\"/about\">About</Link>\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link> */}\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          <Route path=\"/\" exact render={() => <HomePage home = {this.state.home}/>} />\n          {/* <Route path=\"/about\" render={() => <AboutPage title={this.state.about.title} />} />\n          <Route path=\"/contact\" render={() => <ContactPage title={this.state.contact.title} />} /> */}\n          \n          <Footer />\n\n        </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}